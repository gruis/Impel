var offlineMirrorSynchroCallBack=function(a){this.importData(a)};var offlineMirrorCheckForUpdatesCallBack=function(a){this.checkForUpdates(a)};var offlineMirror=new Class({Extends:localSQLStorage,options:{name:"cardsMirror",maxSize:4096,baseURL:"http://m.cards.gunther.helix:8888/synchro/"},checkForUpdates:function(b){if(b==null){dbug.log("checking for updates");new JsonP(this.options.baseURL+"versions.json.php",{onComplete:offlineMirrorCheckForUpdatesCallBack.bind(this)}).request()}else{var c=null;var a=Array();b.each(function(d){if(d.table!=null&&d.version!=null){c=this.getItem(d.table+"-version");if(c==null||c<d.version){a.push(d.table)}c=0}}.bind(this));this.synchronize(a)}},synchronize:function(b){if(b==null){this.checkForUpdates()}else{if(b.length==0){this.fireEvent("synchronized");return}var c=b;var a=Array();this.addEvent("updateFailed",function(d){c.erase(d);a.push(d);if(c.length()==0){this.fireEvent("synchronizationFailed",a)}});this.addEvent("updated",function(d){c.erase(d);if(c.length==0){if(a.length>0){this.fireEvent("synchronizationFailed",a)}else{this.fireEvent("synchronized")}}});b.each(function(d){this.fireEvent("synchronizing",d);new JsonP(this.options.baseURL+d+".json.php",{onComplete:offlineMirrorSynchroCallBack.bind(this)}).request()}.bind(this))}},importData:function(a){if(a.table==null||a.version==null){return}var b=this.getItem(a.table+"-version");if(b!=null&&b>=a.version){this.fireEvent("updated",[a.table,b,a.version]);return}if(a.create!=null){this.db.transaction(function(c){c.executeSql(a.create,[],function(){},$lambda(false))}.bind(this),function(){this.fireEvent("createFailed",a.table)}.bind(this),function(){this.fireEvent("created",a.table)}.bind(this))}if(a.extra!=null){this.db.transaction(function(c){a.extra.each(function(d){c.executeSql(d,[],function(){},$lambda(false))})}.bind(this),$empty,$empty)}this.fireEvent("update",a.table);if(a.data!=null&&a.data.$family.name=="array"){this.db.transaction(function(e){var d="";for(var c=0;c<=a.data.length;c++){d=a.data[c];if(typeof(d)=="string"){dbug.log(d);e.executeSql(d,[],function(){},$lambda(false))}}}.bind(this),function(){this.fireEvent("updateFailed",[a.table,b,a[version]])}.bind(this),function(){this.setItem(a.table+"-version",a.version);this.fireEvent("updated",[a.table,b,a.version])}.bind(this))}}});var Card=new Class({Extends:ImpelClass,peer_class:"CardPeer",toString:function(){return this.getKanji()}});var CardPeer=new ImpelPeer({columns:{id:"card.id",kanji:"card.kanji",hatsuon:"card.hatsuon",meaning:"card.meaning",level:"card.level",created_at:"card.created_at",updated_at:"card.updated_at"},table:"card",base_object:"Card"});var Compound=new Class({Extends:ImpelClass,peer_class:"CompoundPeer",toString:function(){return this.getKanji()}});var CompoundPeer=new ImpelPeer({columns:{id:"compound.id",kanji:"compound.kanji",hatsuon:"compound.hatsuon",meaning:"compound.meaning",level:"compound.level",created_at:"compound.created_at",updated_at:"compound.updated_at"},table:"compound",base_object:"Compound"});var CardCompound=new Class({Extends:ImpelClass,peer_class:"CardCompoundPeer",});var CardCompoundPeer=new ImpelPeer({columns:{id:"card_compound.id",card_id:"card_compound.card_id",compound_id:"card_compound.compound_id",created_at:"card_compound.created_at"},table:"card_compound",base_object:"CardCompound"});CardPeer.hasManyThrough("CompoundPeer::id","CardCompoundPeer::card_id","CardCompoundPeer::compound_id");CompoundPeer.hasManyThrough("CardPeer::id","CardCompoundPeer::compound_id","CardCompoundPeer::card_id");var Stack=new Class({Extends:ImpelClass,peer_class:"StackPeer",toString:function(){return this.getName()},});var StackPeer=new ImpelPeer({columns:{id:"stack.id",name:"stack.name",created_at:"stack.created_at",updated_at:"stack.updated_at"},table:"stack",base_object:"Stack"});var CompoundStack=new Class({Extends:ImpelClass,peer_class:"CompoundStackPeer",});var CompoundStackPeer=new ImpelPeer({columns:{id:"compound_stack.id",stack_id:"compound_stack.card_id",compound_id:"compound_stack.compound_id"},table:"compound_stack",base_object:"CompoundStack"});var CardStack=new Class({Extends:ImpelClass,peer_class:"CardStackPeer",toString:function(){return this.getId()+":"+this.getCardId()+"-"+this.getStackId()}});var CardStackPeer=new ImpelPeer({columns:{id:"card_stack.id",stack_id:"card_stack.stack_id",card_id:"card_stack.card_id"},table:"card_stack",base_object:"CardStack"});CardPeer.hasManyThrough("StackPeer::id","CardStackPeer::card_id","CardStackPeer::stack_id");StackPeer.hasManyThrough("CardPeer::id","CardStackPeer::stack_id","CardStackPeer::card_id");var CardScore=new Class({Extends:ImpelClass,peer_class:"CardScorePeer",toString:function(){return this.getCorrect()+" correct, "+this.getIncorrect()+" incorrect"}});var CardScorePeer=new ImpelPeer({columns:{id:"card_score.id",card_id:"card_score.card_id",correct:"card_score.correct",incorrect:"card_score.incorrect",srs_bucket:"card_score.srs_bucket",srs_bucket_changed_on:"card_score.srs_bucket_changed_on",srs_bucket_was:"card_score.srs_bucket_was",module:"card_score.module",action:"card_score.action",created_at:"card_score.created_at",updated_at:"card_score.updated_at"},table:"card_score",base_object:"CardScore"});CardPeer.hasMany("CardScorePeer::card_id");var CompoundScore=new Class({Extends:ImpelClass,peer_class:"CompoundScorePeer",});var CompoundScorePeer=new ImpelPeer({columns:{id:"compound_score.id",compound_id:"compound_score.compound_id",correct:"compound_score.correct",incorrect:"compound_score.incorrect",srs_bucket:"compound_score.srs_bucket",srs_bucket_changed_on:"compound_score.srs_bucket_changed_on",srs_bucket_was:"compound_score.srs_bucket_was",module:"compound_score.module",action:"compound_score.action",created_at:"compound_score.created_at",updated_at:"compound_score.updated_at"},table:"compound_score",base_object:"CompoundScore"});var NothingSpecial=new Class({Extends:ImpelClass,peer_class:"NothingSpecialPeer"});var NothingSpecialPeer=new ImpelPeer({columns:{id:"nothing_special.id",name:"nothing_special.name"},table:"nothing_special",base_object:"NothingSpecial"});