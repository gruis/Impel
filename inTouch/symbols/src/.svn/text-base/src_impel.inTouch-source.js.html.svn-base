<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"> <style>
	.KEYW {color: #933;}
	.COMM {color: #bbb; font-style: italic;}
	.NUMB {color: #393;}
	.STRN {color: #393;}
	.REGX {color: #339;}
	.line {border-right: 1px dotted #666; color: #666; font-style: normal;}
	</style></head><body><pre><span class='line'>  1</span> <span class="COMM">/* 
<span class='line'>  2</span>   Copyright (c) 2009 Caleb Crane &lt;license [at] simulacre.org>, Simulacre Publishing LLC
<span class='line'>  3</span> 
<span class='line'>  4</span>   Permission is hereby granted, free of charge, to any person
<span class='line'>  5</span>   obtaining a copy of this software and associated documentation
<span class='line'>  6</span>   files (the "Software"), to deal in the Software without
<span class='line'>  7</span>   restriction, including without limitation the rights to use,
<span class='line'>  8</span>   copy, modify, merge, publish, distribute, sublicense, and/or sell
<span class='line'>  9</span>   copies of the Software, and to permit persons to whom the
<span class='line'> 10</span>   Software is furnished to do so, subject to the following
<span class='line'> 11</span>   conditions:
<span class='line'> 12</span> 
<span class='line'> 13</span>   The above copyright notice and this permission notice shall be
<span class='line'> 14</span>   included in all copies or substantial portions of the Software.
<span class='line'> 15</span>   
<span class='line'> 16</span>   Except as contained in this notice, the name(s) of the above 
<span class='line'> 17</span>   copyright holders shall not be used in advertising or otherwise 
<span class='line'> 18</span>   to promote the sale, use or other dealings in this Software 
<span class='line'> 19</span>   without prior written authorization.
<span class='line'> 20</span>   
<span class='line'> 21</span>   The end-user documentation included with the redistribution, if 
<span class='line'> 22</span>   any, must include the following acknowledgment: "This product 
<span class='line'> 23</span>   includes software developed by Simulacre Publishing LLC 
<span class='line'> 24</span>   (http://www.simulacre.org/) and its contributors", in the same 
<span class='line'> 25</span>   place and form as other third-party acknowledgments. Alternately, 
<span class='line'> 26</span>   this acknowledgment may appear in the software itself, in the same
<span class='line'> 27</span>   form and location as other such third-party acknowledgments.
<span class='line'> 28</span> 
<span class='line'> 29</span>   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
<span class='line'> 30</span>   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
<span class='line'> 31</span>   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
<span class='line'> 32</span>   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
<span class='line'> 33</span>   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
<span class='line'> 34</span>   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
<span class='line'> 35</span>   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
<span class='line'> 36</span>   OTHER DEALINGS IN THE SOFTWARE.
<span class='line'> 37</span> */</span><span class="WHIT">
<span class='line'> 38</span> </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">Impel</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'> 39</span> </span><span class="WHIT">  </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">Impel</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Class</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'> 40</span> 
<span class='line'> 41</span> 
<span class='line'> 42</span> 
<span class='line'> 43</span> </span><span class="NAME">Impel.inTouch</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Class</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'> 44</span> </span><span class="WHIT">  </span><span class="COMM">/** @lends Impel.inTouch.prototype */</span><span class="WHIT">
<span class='line'> 45</span> </span><span class="WHIT">  </span><span class="NAME">Implements</span><span class="WHIT">  </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">Options</span><span class="PUNC">,</span><span class="NAME">Events</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 46</span> </span><span class="WHIT">  </span><span class="NAME">options</span><span class="WHIT">     </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT"> 
<span class='line'> 47</span>                   </span><span class="NAME">name</span><span class="WHIT">              </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">"Impel_inTouch"</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 48</span> </span><span class="WHIT">                  </span><span class="NAME">displayName</span><span class="WHIT">       </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">"Impel inTouch"</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 49</span> </span><span class="WHIT">                  </span><span class="NAME">maxSize</span><span class="WHIT">           </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NUMB">4096</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 50</span> </span><span class="WHIT">                  </span><span class="NAME">baseURL</span><span class="WHIT">           </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 51</span> </span><span class="WHIT">                  </span><span class="NAME">versionsFile</span><span class="WHIT">      </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">'versions.json.php'</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 52</span> </span><span class="WHIT">                  </span><span class="NAME">tableFileSuffix</span><span class="WHIT">   </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">'.json.php'</span><span class="WHIT">
<span class='line'> 53</span> </span><span class="WHIT">                </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 54</span> </span><span class="WHIT">  </span><span class="NAME">version</span><span class="WHIT">   </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NUMB">0.7</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 55</span> </span><span class="WHIT">  </span><span class="NAME">versions</span><span class="WHIT">  </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">$H</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 56</span> </span><span class="WHIT">  </span><span class="NAME">loaded</span><span class="WHIT">    </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'> 57</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'> 58</span>    * Keep a local  HTML5 SQL database in sync with one published by your server.
<span class='line'> 59</span>    * &lt;p>Impel.inTouch is used by the forthcoming HTML5 Javascript ORM, Impel, but you can use it separately without any trouble&lt;/p>
<span class='line'> 60</span>    *   
<span class='line'> 61</span>    *
<span class='line'> 62</span>    *
<span class='line'> 63</span>    * &lt;h2>Using Impel.inTouch&lt;/h2>
<span class='line'> 64</span>    * &lt;p>Impel.inTouch makes it simple to keep your client's HTML5 databases up-to-date. The first time it is used on a client's computer it will connect to your server, download the latest schema and data then import it into the local HTML5 database. Every other time the client connects to your site, or loads a cached version of it, Impel.inTouch will quickly verify that it has the latest schema and data then pass off to the rest of your web application. All you need to do to update the HTML5 databases on your client's machines is update the schema published by your server. All your client's will download the new data the very next time they fire up your web application.&lt;/p>
<span class='line'> 65</span>    * &lt;p>It's all completely transparent to your clients and painless for you.&lt;/p>
<span class='line'> 66</span>    * &lt;p>You do need to do a little bit of preparation though.&lt;/p>
<span class='line'> 67</span>    * &lt;ul>
<span class='line'> 68</span>    *  &lt;li>Setup a versions file on the server&lt;/li>
<span class='line'> 69</span>    *  &lt;li>Setup a table definition file for each table that should be imported/updated by the client&lt;/li>
<span class='line'> 70</span>    *  &lt;li>Include Impel.inTouch in an html file and instantiate it&lt;/li>
<span class='line'> 71</span>    * &lt;/ul>
<span class='line'> 72</span>    *
<span class='line'> 73</span>    * &lt;p>Tables can be updated in one of two ways:&lt;/p>
<span class='line'> 74</span>    *  &lt;ol>
<span class='line'> 75</span>    *    &lt;li>Single Update: no matter what the current version of the table is it will be updated to the absolute latest version.&lt;/li>
<span class='line'> 76</span>    *    &lt;li>Incremental Update: the table will be updated to the next most recent version then the next most recent, and so on until it is at the latest version.&lt;/li>
<span class='line'> 77</span>    *  &lt;/ol>   
<span class='line'> 78</span>    *
<span class='line'> 79</span>    * &lt;h3>Setup a versions file&lt;/h3>
<span class='line'> 80</span>    *  &lt;p>The versions file contains a JSON encoded array of objects that define the tables and their versions. The array has to be enclosed in a function call to Impel.JsonP.callback. The callback name (Impel.JsonP.callback) will also be specified as part of the query string. By default the versions file is named versions.json.php, but you can change that when you instantiate an Impel.inTouch object.&lt;/p>
<span class='line'> 81</span>    *  &lt;p>If you want the table to be updated in a single request then its entry in the versions file must consist of a table key and a &lt;em>version&lt;/em> key. The version key's value should simply be the most recent version number.&lt;/p>
<span class='line'> 82</span>    *  &lt;p>If you want the table to be updated incrementally then its entry in the versions file must consist of a table key and a &lt;em>versions&lt;/em> key. The versions key's value should be an array of ALL the versions of the table.&lt;/p>
<span class='line'> 83</span>    * &lt;pre>versions.json.php&lt;/pre>
<span class='line'> 84</span>    * &lt;pre class="code brush: js;">
<span class='line'> 85</span>    *
<span class='line'> 86</span>    * Impel.JsonP.callback([{ "table" : "card",         "version" : 1}, 
<span class='line'> 87</span>    *                          { "table" : "stack",        "version" : 1}, 
<span class='line'> 88</span>    *                          { "table" : "similar_card", "version" : 1}, 
<span class='line'> 89</span>    *                          { "table" : "card_score",   "version" : 1},
<span class='line'> 90</span>    *                          { "table" : "player",     "versions" : [1,2,3,4,5,6,7]},
<span class='line'> 91</span>    *                          ]);
<span class='line'> 92</span>    * &lt;/pre>
<span class='line'> 93</span>    *
<span class='line'> 94</span>    *
<span class='line'> 95</span>    * &lt;h3>Setup table definition file(s)&lt;/h3>
<span class='line'> 96</span>    * &lt;p>Every table that you want to have created/updated on your client's browser must have an associated definition file. The file must have the same name as the table in the versions file. By default the suffix for the table file should be .json.php, but you can specify a different suffix when you instantiate an Impel.inTouch object.&lt;/p>
<span class='line'> 97</span>    * &lt;p>&lt;strong>Important note &lt;/strong> If a table is to be updated incrementally rather than in a single update the name of the table and the suffix must be seperated by "_[table_version]" for each version of the table. So in the example above, where the player table has seven versions, we would need seven files: palyer_1.json.php, palyer_2.json.php, player_3.json.php, etc.,. &lt;/p>
<span class='line'> 98</span>    *
<span class='line'> 99</span>    * &lt;p>Each table definition file must contain a JSON encoded object as an argument to a call to Impel.JsonP.callback. The callback name (Impel.JsonP.callback) will also be specified as part of the request's query string. The object may include six key/value pairs; four of which (create, data, pre-create, and extra) are optional. The rest, (version, and table) are required, but for your update to have any effect you will need to define either &lt;em>create&lt;/em>, or &lt;em>data&lt;/em>&lt;/p>
<span class='line'>100</span>    * &lt;ul>
<span class='line'>101</span>    * 	&lt;li>&lt;span class="type">{String}&lt;/span> &lt;span class="param">table&lt;/span> The name of the table&lt;/li>
<span class='line'>102</span>    * 	&lt;li>&lt;span class="type">{Int}&lt;/span> &lt;span class="param">version&lt;/span> The version of table and its data&lt;/li>
<span class='line'>103</span>    * 	&lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">pre-create&lt;/span>] An array of SQL statements to execute before going on to the create string&lt;/li>
<span class='line'>104</span>    * 	&lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">create&lt;/span>] An SQL statement used to create the table&lt;/li>
<span class='line'>105</span>    * 	&lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">extra&lt;/span>] An array of SQL statements used to modify the table after it has been created, but before data has been loaded&lt;/li>
<span class='line'>106</span>    * 	&lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">data&lt;/span>] Array of INSERT, UPDATE, or DELETE statements used to fill the table&lt;/li>
<span class='line'>107</span>    * &lt;/ul>
<span class='line'>108</span>    * &lt;pre>card.json.php:&lt;/pre>
<span class='line'>109</span>    * &lt;pre class="code brush: js;">
<span class='line'>110</span>    *
<span class='line'>111</span>    * Impel.JsonP.callback({
<span class='line'>112</span>    *   "version" : 1,
<span class='line'>113</span>    *   "table": "card",
<span class='line'>114</span>    *   "pre-create" : ["DROP TABLE IF EXISTS `card`"],
<span class='line'>115</span>    *   "create": "CREATE TABLE IF NOT EXISTS `card` (`id` INTEGER PRIMARY KEY, `kanji` varchar(255) default NULL, `hatsuon` varchar(255) default NULL, `meaning` varchar(255) default NULL, `level` int(11) default NULL, `created_at` datetime default NULL, `updated_at` datetime default NULL);",
<span class='line'>116</span>    *   
<span class='line'>117</span>    *   "extra" : ["CREATE INDEX IF NOT EXISTS card_I_1 ON card(kanji);", 
<span class='line'>118</span>    *              "CREATE INDEX IF NOT EXISTS card_I_2 ON card(hatsuon);"],
<span class='line'>119</span>    *   
<span class='line'>120</span>    *   "data" : ["INSERT INTO `card` VALUES(119, '席', 'せき', 'seat; ones place; meeting place; hall; meeting', 2, '2009-02-28 06:44:13', '2009-03-02 01:28:51');",
<span class='line'>121</span>    *            　"INSERT INTO `card` VALUES(120, '印', 'いん,じるし', 'mark; imprint; sign; seal; stamp', 2, '2009-02-28 06:44:14', '2009-02-28 06:44:14');"]
<span class='line'>122</span>    *   }); 
<span class='line'>123</span>    * &lt;/pre>
<span class='line'>124</span>    *
<span class='line'>125</span>    *
<span class='line'>126</span>    * &lt;pre>player_6.json.php:&lt;/pre>
<span class='line'>127</span>    * &lt;pre class="code brush: js;">
<span class='line'>128</span>    *
<span class='line'>129</span>    * Impel.JsonP.callback({
<span class='line'>130</span>    *   "version" : 6,
<span class='line'>131</span>    *   "table": "player",
<span class='line'>132</span>    *   "data" : ["INSERT INTO `player` VALUES(760, 'Bugssy Two-Tone', '2009-01-21 16:47:13');",
<span class='line'>133</span>    *             "INSERT INTO `player` VALUES(761, 'Bill Brass-Knuckles Malone', '2009-01-22 13:22:56');"]
<span class='line'>134</span>    *   }); 
<span class='line'>135</span>    * &lt;/pre>
<span class='line'>136</span>    *
<span class='line'>137</span>    * &lt;pre>player_7.json.php:&lt;/pre>
<span class='line'>138</span>    * &lt;pre class="code brush: js;">
<span class='line'>139</span>    *
<span class='line'>140</span>    * Impel.JsonP.callback({
<span class='line'>141</span>    *   "version" : 7,
<span class='line'>142</span>    *   "table": "player",
<span class='line'>143</span>    *   "data" : ["INSERT INTO `player` VALUES(762, 'Johnny Good', '2009-02-28 06:44:13');",
<span class='line'>144</span>    *             "INSERT INTO `player` VALUES(763, 'Tommy Big', '2009-02-28 11:24:06');"]
<span class='line'>145</span>    *   }); 
<span class='line'>146</span>    * &lt;/pre>   
<span class='line'>147</span>    *
<span class='line'>148</span>    *
<span class='line'>149</span>    *
<span class='line'>150</span>    *
<span class='line'>151</span>    * &lt;h3>Include and Instantiate Impel.inTouch&lt;/h3>
<span class='line'>152</span>    *  &lt;p>Impel requires Mootools 1.2+. Other than that all you need to do is include the Impel.inTouch library in a script tag, and instantiate an Impel.inTouch object with the baseURL option. The baseURL can be remote or a relative directory, so http://my.server.co.jp/inTouch/ will work as will inTouch/. &lt;/p>
<span class='line'>153</span>    *  &lt;p>Instantiation is a two step process. First the object must determine which versions of the tables are currently setup on the client. Once that is done it will fire a 'ready' event. At that point all you have to do is call sync(). Once synchronization is finished it will fire a 'synced' event. Various events will be fired during the synchronization process to give you a better idea of what is going on and what errors (if any) occurred. Consult the API documentation for a full list.&lt;/p>
<span class='line'>154</span>    * &lt;pre class="code brush: js;">
<span class='line'>155</span>    *&lt;script type="text/javascript" src="/js/impel.inTouch.js">&lt;/script>
<span class='line'>156</span>    *    
<span class='line'>157</span>    *&lt;script type="text/javascript">
<span class='line'>158</span>    *  ...
<span class='line'>159</span>    *   var storage = new Impel.inTouch({
<span class='line'>160</span>    *       baseURL  : 'http://my.server.co.jp/inTouch/', 
<span class='line'>161</span>    *       onReady  : function(){ 
<span class='line'>162</span>    *                   notify("synchronizing storage..."); 
<span class='line'>163</span>    *                   notify("This may take to 2 minutes; please be patient."); 
<span class='line'>164</span>    *                   storage.sync(); 
<span class='line'>165</span>    *                  },
<span class='line'>166</span>    *       onUpdated  : function(table,oldV,newV){ notify("table "+ table + " (v"+oldV+") updated to v"+newV); },
<span class='line'>167</span>    *       onUpdating : function(table){ notify("syncing "+table+" with the server"); },
<span class='line'>168</span>    *       onSynced   : function(){ notify("sync is complete") }, 
<span class='line'>169</span>    *       onAbort       : function(code){
<span class='line'>170</span>    *                                 if(code == 1){
<span class='line'>171</span>    *                                     if(!localStorage.getItem("loadedOnce"))
<span class='line'>172</span>    *                                         notify.showError("Unable initialize data. You will not be able to use KanjiTastic until the initial data has been loaded.")
<span class='line'>173</span>    *                                 }
<span class='line'>174</span>    *                             },
<span class='line'>175</span>    *       onSyncFailed : function(failures){ notify("sync failed for: " + failures); },
<span class='line'>176</span>    *       onCreateFailed : function(t,e){ notify("Table creation failed for " + t + ": " + e); }
<span class='line'>177</span>    *      });
<span class='line'>178</span>    *  ...
<span class='line'>179</span>    *&lt;/script>
<span class='line'>180</span>    * &lt;/pre>
<span class='line'>181</span>    *
<span class='line'>182</span>    *
<span class='line'>183</span>    * @constructs
<span class='line'>184</span>    * @param {Object} options
<span class='line'>185</span>    * &lt;ul>
<span class='line'>186</span>    *  &lt;li>&lt;span class="type">{String}&lt;/span> &lt;span class="param">baseURL&lt;/span>=&lt;span class="dfvalue">null&lt;/span> &lt;span class="required">Required&lt;/span> The url where Impel.inTouch can find the versions and table definition files. It does not have to be on the same server that provides the rest of your JavaScript.&lt;/li>
<span class='line'>187</span>    *  &lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">versionsFile&lt;/span>=&lt;span class="dfvalue">versions.json.php&lt;/span>] The name of the file on the server that details the currently published tables and their versions&lt;/li>
<span class='line'>188</span>    *  &lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">tableFileSuffix&lt;/span>=&lt;span class="dfvalue">.json.php&lt;/span>] The suffix of the files on the server that include the import/update data&lt;/li>
<span class='line'>189</span>    *  &lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">name&lt;/span>=&lt;span class="dfvalue">Impel_inTouch&lt;/span>] The name of the local database to use&lt;/li>
<span class='line'>190</span>    *  &lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">displayName&lt;/span>=&lt;span class="dfvalue">Impel inTouch&lt;/span>] A human-friendly name for the database&lt;/li>
<span class='line'>191</span>    *  &lt;li>&lt;span class="type">{Number}&lt;/span> [&lt;span class="param">maxSize&lt;/span>=&lt;span class="dfvalue">4096&lt;/span>] The maximum size that this database can grow to&lt;/li>
<span class='line'>192</span>    * &lt;/ul>
<span class='line'>193</span>    * @param {Object} events
<span class='line'>194</span>    *  &lt;ul>
<span class='line'>195</span>    *    &lt;li>&lt;a href="#event:onReady">ready&lt;/a>&lt;/li>
<span class='line'>196</span>    *    &lt;li>&lt;a href="#event:onCreated">created&lt;/a>&lt;/li>
<span class='line'>197</span>    *    &lt;li>&lt;a href="#event:onCreateFailed">createFailed&lt;/a>&lt;/li>
<span class='line'>198</span>    *    &lt;li>&lt;a href="#event:onSynced">synced&lt;/a>&lt;/li>   
<span class='line'>199</span>    *    &lt;li>&lt;a href="#event:onSyncing">syncing&lt;/a>&lt;/li>
<span class='line'>200</span>    *    &lt;li>&lt;a href="#event:onSyncFailed">syncFailed&lt;/a>&lt;/li>
<span class='line'>201</span>    *    &lt;li>&lt;a href="#event:onUpdated">updated&lt;/a>&lt;/li>   
<span class='line'>202</span>    *    &lt;li>&lt;a href="#event:onUpdating">updating&lt;/a>&lt;/li>
<span class='line'>203</span>    *    &lt;li>&lt;a href="#event:onUpdateFailed">updateFailed&lt;/a>&lt;/li>
<span class='line'>204</span>    *  &lt;/ul>   
<span class='line'>205</span>    *
<span class='line'>206</span>    * 
<span class='line'>207</span>    * @property {String} options.baseURL The url where Impel.inTouch can find the versions and table definition files. It does not have to be on the same server that provides the rest of your JavaScript
<span class='line'>208</span>    * @property {String} [options.versionsFile=versions.json.php] The name of the file on the server that details the currently published tables and their versions
<span class='line'>209</span>    * @property {String} [options.tableFileSuffix=.json.php] The suffix of the files on the server that include the import/update data
<span class='line'>210</span>    * @property {String} [options.name=Impel_inTouch] The name of the local database to use 
<span class='line'>211</span>    * @property {String} [options.displayName=Impel inTouch] A human-friendly name for the database
<span class='line'>212</span>    * @property {Number} [options.maxSize=4096] The maximum size that this database can grow to 
<span class='line'>213</span>    *
<span class='line'>214</span>    * @version: 0.7
<span class='line'>215</span>    * @requires: Mootools
<span class='line'>216</span>    * @see &lt;a href="http://mootools.net/">http://mootools.net/&lt;/a>
<span class='line'>217</span>    */</span><span class="WHIT">
<span class='line'>218</span> </span><span class="WHIT">  </span><span class="NAME">initialize</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">options</span><span class="PUNC">,</span><span class="NAME">events</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>219</span> </span><span class="WHIT">    </span><span class="NAME">this.setOptions</span><span class="PUNC">(</span><span class="NAME">options</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>220</span> </span><span class="WHIT">    </span><span class="NAME">this.addEvents</span><span class="PUNC">(</span><span class="NAME">events</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>221</span> </span><span class="WHIT">    </span><span class="NAME">this.loadVersions</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.loaded</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">this.ready</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>222</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>223</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>224</span>    * The Impel.inTouch object has been initialized, you can now call sync or any other method.
<span class='line'>225</span>    * @name Impel.inTouch#onReady
<span class='line'>226</span>    * @event
<span class='line'>227</span>    */</span><span class="WHIT">
<span class='line'>228</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>229</span> </span><span class="WHIT">  </span><span class="NAME">ready</span><span class="WHIT">                   </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'ready'</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>230</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>231</span>    * The local database has been fully synchronized with the server
<span class='line'>232</span>    * @name Impel.inTouch#onSynced
<span class='line'>233</span>    * @event
<span class='line'>234</span>    */</span><span class="WHIT">
<span class='line'>235</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>236</span> </span><span class="WHIT">  </span><span class="NAME">synced</span><span class="WHIT">            </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'synced'</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>237</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>238</span>    * One or more of the local tables was not synchronized with the server
<span class='line'>239</span>    * @name Impel.inTouch#onSyncFailed
<span class='line'>240</span>    * @event
<span class='line'>241</span>    * @param {String[]} failed The tables that were not synchronized successfully
<span class='line'>242</span>    */</span><span class="WHIT">
<span class='line'>243</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>244</span> </span><span class="WHIT">  </span><span class="NAME">syncFailed</span><span class="WHIT">   </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">failed</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'syncFailed'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">failed</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>245</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>246</span>    * Synchronization has begun
<span class='line'>247</span>    * @name Impel.inTouch#onSyncing
<span class='line'>248</span>    * @event
<span class='line'>249</span>    */</span><span class="WHIT">
<span class='line'>250</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>251</span> </span><span class="WHIT">  </span><span class="NAME">syncing</span><span class="WHIT">            </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'syncing'</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>252</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>253</span>    * A particular table is now being updated
<span class='line'>254</span>    * @param {String} table
<span class='line'>255</span>    * @name Impel.inTouch#onUpdating
<span class='line'>256</span>    * @event
<span class='line'>257</span>    */</span><span class="WHIT">
<span class='line'>258</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>259</span> </span><span class="WHIT">  </span><span class="NAME">updating</span><span class="WHIT">                </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'updating'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>260</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>261</span>    * A particular table has been updated
<span class='line'>262</span>    * @param {String} table
<span class='line'>263</span>    * @param {Number} old The table was at old version
<span class='line'>264</span>    * @param {Number} now The table is now at now version
<span class='line'>265</span>    * @name Impel.inTouch#onUpdated
<span class='line'>266</span>    * @event
<span class='line'>267</span>    */</span><span class="WHIT">
<span class='line'>268</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>269</span> </span><span class="WHIT">  </span><span class="NAME">updated</span><span class="WHIT">                 </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">old</span><span class="PUNC">,</span><span class="NAME">now</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'updated'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">table</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">old</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">now</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>270</span> </span><span class="WHIT">  </span><span class="COMM">/** 
<span class='line'>271</span>    * A particular table was not updated
<span class='line'>272</span>    * @param {String} table
<span class='line'>273</span>    * @param {Number} now The table remains at now version
<span class='line'>274</span>    * @param {Number} future The table was not updated to future version
<span class='line'>275</span>    * @name Impel.inTouch#onUpdateFailed
<span class='line'>276</span>    * @event
<span class='line'>277</span>    */</span><span class="WHIT">
<span class='line'>278</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>279</span> </span><span class="WHIT">  </span><span class="NAME">updateFailed</span><span class="WHIT">            </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">now</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">future</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'updateFailed'</span><span class="PUNC">,</span><span class="PUNC">[</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">now</span><span class="PUNC">,</span><span class="NAME">future</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>280</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>281</span>    * The portion of the update meant to create the local table succeeded
<span class='line'>282</span>    * @param {String} table
<span class='line'>283</span>    * @name Impel.inTouch#onCreated
<span class='line'>284</span>    * @event
<span class='line'>285</span>    */</span><span class="WHIT">
<span class='line'>286</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>287</span> </span><span class="WHIT">  </span><span class="NAME">created</span><span class="WHIT">                 </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">"created"</span><span class="PUNC">,</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>288</span> </span><span class="WHIT">  
<span class='line'>289</span>   </span><span class="COMM">/**
<span class='line'>290</span>    * The sync was aborted due to a network error
<span class='line'>291</span>    *  &lt;ul>
<span class='line'>292</span>    *    &lt;lh>Codes&lt;/lh>   
<span class='line'>293</span>    *    &lt;li>1 : The versions file could not be retrieved. &lt;/li>
<span class='line'>294</span>    *  &lt;/ul>
<span class='line'>295</span>    * @param {Number} code
<span class='line'>296</span>    * @name Impel.inTouch#onAborted
<span class='line'>297</span>    * @event
<span class='line'>298</span>    */</span><span class="WHIT">
<span class='line'>299</span> </span><span class="WHIT">  </span><span class="NAME">aborted</span><span class="WHIT">                 </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">code</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'abort'</span><span class="PUNC">,</span><span class="NAME">code</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>300</span> 
<span class='line'>301</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>302</span>    * The portion of the update meant to create the local table failed
<span class='line'>303</span>    * @param {String} table
<span class='line'>304</span>    * @param {String} error The error message
<span class='line'>305</span>    * @name Impel.inTouch#onCreateFailed
<span class='line'>306</span>    * @event
<span class='line'>307</span>    */</span><span class="WHIT">
<span class='line'>308</span> </span><span class="WHIT">   </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>309</span> </span><span class="WHIT">  </span><span class="NAME">createFailed</span><span class="WHIT">            </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">error</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">"createFailed"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">error</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>310</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>311</span>    * Check the local database to determine the current versions of all local tables. The version information will be stored in memory to serve future requests to &lt;a href="#getVersion">getVersion&lt;/a>
<span class='line'>312</span>    * @param {function} s_callback A function to call when the load is complete
<span class='line'>313</span>    * @see Impel.inTouch#getVersion
<span class='line'>314</span>    * @see Impel.inTouch#setVersion
<span class='line'>315</span>    */</span><span class="WHIT">
<span class='line'>316</span> </span><span class="WHIT">  </span><span class="NAME">loadVersions</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">s_callback</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>317</span> </span><span class="WHIT">        </span><span class="KEYW">try</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>318</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">window.openDatabase</span><span class="PUNC">)</span><span class="WHIT"> 
<span class='line'>319</span>               </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">'HTML 5 SQL database not supported'</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>320</span> </span><span class="WHIT">            </span><span class="KEYW">else</span><span class="WHIT">
<span class='line'>321</span> </span><span class="WHIT">              </span><span class="NAME">this.db</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">openDatabase</span><span class="PUNC">(</span><span class="NAME">this.options.name</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">'1.0'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">this.options.displayName</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">this.options.maxSize</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>322</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">catch</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>323</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">e</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">2</span><span class="PUNC">)</span><span class="WHIT"> 
<span class='line'>324</span>               </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">'Encountered an error while opening the database: invalid database version'</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>325</span> </span><span class="WHIT">            </span><span class="KEYW">else</span><span class="WHIT">
<span class='line'>326</span> </span><span class="WHIT">              </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Encountered an error while opening the database: unknown error "</span><span class="PUNC">+</span><span class="NAME">e</span><span class="PUNC">+</span><span class="STRN">"."</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>327</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>328</span> </span><span class="WHIT">        </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">that</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">cacheVersionsFromRS</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">retrieveVersions</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">row</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>329</span> </span><span class="WHIT">        </span><span class="NAME">that</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>330</span> </span><span class="WHIT">        </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>331</span> </span><span class="WHIT">        </span><span class="NAME">cacheVersionsFromRS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">,</span><span class="NAME">results</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>332</span> </span><span class="WHIT">            </span><span class="KEYW">for</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">results.rows.length</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>333</span> </span><span class="WHIT">                  </span><span class="NAME">row</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">results.rows.item</span><span class="PUNC">(</span><span class="NAME">i</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>334</span> </span><span class="WHIT">                  </span><span class="NAME">that.versions.set</span><span class="PUNC">(</span><span class="NAME">row</span><span class="PUNC">[</span><span class="STRN">'t'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="NAME">row</span><span class="PUNC">[</span><span class="STRN">'v'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>335</span> </span><span class="WHIT">              </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>336</span> </span><span class="WHIT">              </span><span class="NAME">s_callback</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>337</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>338</span> </span><span class="WHIT">        </span><span class="COMM">/** @private */</span><span class="WHIT">
<span class='line'>339</span> </span><span class="WHIT">        </span><span class="NAME">retrieveVersions</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">,</span><span class="NAME">results</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>340</span> </span><span class="WHIT">          </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="STRN">"SELECT * FROM table_versions;"</span><span class="PUNC">,</span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">cacheVersionsFromRS</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Unable to retrieve list of current table versions: "</span><span class="PUNC">+</span><span class="NAME">e.message</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>341</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>342</span> </span><span class="WHIT">    
<span class='line'>343</span>         </span><span class="NAME">this.db.transaction</span><span class="PUNC">(</span><span class="WHIT">
<span class='line'>344</span> </span><span class="WHIT">               </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>345</span> </span><span class="WHIT">                   </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="STRN">"CREATE TABLE IF NOT EXISTS table_versions('t' TEXT NOT NULL PRIMARY KEY, 'v' INT NOT NULL);"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>346</span>                                           </span><span class="NAME">retrieveVersions</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>347</span>                                           </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Unable to create table to cache version data: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">e.message</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>348</span> </span><span class="WHIT">               </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>349</span>                 </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Unable to create table to cache version data: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">e.message</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>350</span> </span><span class="WHIT">           </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>351</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>352</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>353</span>    * Determine which version a particular local table is currently at. The server will NOT be queried.
<span class='line'>354</span>    * &lt;p>&lt;strong>Important Note&lt;/strong>: This method should not be called before the 'ready' event has been fired. &lt;/p>
<span class='line'>355</span>    * @param {String} table The name of the table to check
<span class='line'>356</span>    * @return {Number} The current version number for the specified table
<span class='line'>357</span>    */</span><span class="WHIT">
<span class='line'>358</span> </span><span class="WHIT">  </span><span class="NAME">getVersion</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.versions.get</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>359</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>360</span>    * Record that a particular table is at a particular version, and persist the record into the database.
<span class='line'>361</span>    * &lt;p>&lt;strong>Important Note&lt;/strong>: This method should not be called before the 'ready' event has been fired. &lt;/p>
<span class='line'>362</span>    * @param {String} table The name of the table
<span class='line'>363</span>    * @param {Int} version The, now, current version for the table
<span class='line'>364</span>    */</span><span class="WHIT">
<span class='line'>365</span> </span><span class="WHIT">  </span><span class="NAME">setVersion</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">version</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>366</span> </span><span class="WHIT">    </span><span class="NAME">this.versions.set</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">version</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>367</span> </span><span class="WHIT">    </span><span class="NAME">this.db.transaction</span><span class="PUNC">(</span><span class="WHIT">
<span class='line'>368</span> </span><span class="WHIT">        </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>369</span> </span><span class="WHIT">            </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="STRN">"INSERT INTO table_versions ('t', 'v') VALUES (?,?);"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">table</span><span class="PUNC">,</span><span class="NAME">version</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>370</span>                                   </span><span class="KEYW">null</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>371</span>                                   </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">,</span><span class="NAME">error</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>372</span> </span><span class="WHIT">                                      </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="STRN">"UPDATE table_versions SET v=? WHERE t=?"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">version</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Unable to save record: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">" = "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">version</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">e.message</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>373</span> </span><span class="WHIT">                                  </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>374</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>375</span> </span><span class="WHIT">    </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>376</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>377</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>378</span>    * Check the server to see if the tables have been updated recently and call synchronize for any that have been updated. 
<span class='line'>379</span>    * &lt;p>If this method is called with no arguments it asynchronously retrieves a list of the tables and their current versions. 
<span class='line'>380</span>    * When the list comes back this method is called again with that list as an argument. It then goes through the list 
<span class='line'>381</span>    * checking for tables that have a version number greater than their local counterparts. Synchronize is then called for
<span class='line'>382</span>    * any tables that need to be updated.&lt;/p>
<span class='line'>383</span>    *
<span class='line'>384</span>    * @param {Object[]} [table_versions] - A list of objects describing the current version, or all versions, of each published table
<span class='line'>385</span>    * @example
<span class='line'>386</span>    *  [
<span class='line'>387</span>    *    { "table" : "card", "version": 3 }, 
<span class='line'>388</span>    *    { "table" : "player", "versions" : [1,2,3,4,5,6] }
<span class='line'>389</span>    *  ]
<span class='line'>390</span>    */</span><span class="WHIT">
<span class='line'>391</span> </span><span class="WHIT">  </span><span class="NAME">checkForUpdates</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table_versions</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>392</span> </span><span class="WHIT">      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">this.options.baseURL</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>393</span> </span><span class="WHIT">        </span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">"baseURL attribute must be set when instantiating an Impel.inTouch object"</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>394</span> </span><span class="WHIT">      
<span class='line'>395</span>       </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">table_versions</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>396</span> </span><span class="WHIT">          </span><span class="KEYW">try</span><span class="PUNC">{</span><span class="WHIT"> 
<span class='line'>397</span>             </span><span class="COMM">/**
<span class='line'>398</span>              * If we are retrieving from an iPhone then the callback function's name cannot be dynamically generated
<span class='line'>399</span>              */</span><span class="WHIT">
<span class='line'>400</span> </span><span class="WHIT">             </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Impel.JsonP</span><span class="PUNC">(</span><span class="NAME">this.options.baseURL</span><span class="PUNC">+</span><span class="NAME">this.options.versionsFile</span><span class="PUNC">,</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">callback</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.checkForUpdates</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">onFailure</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.aborted</span><span class="PUNC">(</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">request</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>401</span> </span><span class="WHIT">          </span><span class="PUNC">}</span><span class="KEYW">catch</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> 
<span class='line'>402</span>             </span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">"Impel.inTouch requires the Impel.JsonP Class."</span><span class="PUNC">;</span><span class="WHIT"> 
<span class='line'>403</span>           </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>404</span> </span><span class="WHIT">      </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>405</span> </span><span class="WHIT">          </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">toUpdate</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">newVersions</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>406</span> </span><span class="WHIT">            </span><span class="NAME">atVersion</span><span class="WHIT">   </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>407</span> </span><span class="WHIT">            </span><span class="NAME">toUpdate</span><span class="WHIT">    </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>408</span> </span><span class="WHIT">            </span><span class="NAME">newVersions</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>409</span> </span><span class="WHIT">          </span><span class="NAME">table_versions.each</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>410</span> </span><span class="WHIT">              </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>411</span> </span><span class="WHIT">                  </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getVersion</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>412</span> </span><span class="WHIT">                  </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>413</span> </span><span class="WHIT">                      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>414</span> </span><span class="WHIT">                          </span><span class="NAME">toUpdate.push</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">                  
<span class='line'>415</span>                   </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>416</span> </span><span class="WHIT">                      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">[</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">length</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>417</span> </span><span class="WHIT">                          </span><span class="NAME">newVersions</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>418</span> </span><span class="WHIT">                          </span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">indexOf</span><span class="PUNC">(</span><span class="NAME">atVersion</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">length</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>419</span> </span><span class="WHIT">                            </span><span class="NAME">newVersions.push</span><span class="PUNC">(</span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>420</span> </span><span class="WHIT">                          </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>421</span> </span><span class="WHIT">                          </span><span class="NAME">toUpdate.push</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">vInfo</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">versions</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">newVersions</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">  </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>422</span> </span><span class="WHIT">                          </span><span class="NAME">newVersions</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>423</span> </span><span class="WHIT">                      </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>424</span> </span><span class="WHIT">                  </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>425</span> </span><span class="WHIT">                  </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="COMM">// reset atVersion for next iteration of table_versions.each</span><span class="WHIT">
<span class='line'>426</span> </span><span class="WHIT">              </span><span class="PUNC">}</span><span class="WHIT">        
<span class='line'>427</span>           </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>428</span> </span><span class="WHIT">          </span><span class="NAME">this.sync</span><span class="PUNC">(</span><span class="NAME">toUpdate</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>429</span> </span><span class="WHIT">      </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>430</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>431</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>432</span>    * Synchronize the local tables with those published by the server.
<span class='line'>433</span>    * &lt;p>If this method is called with no arguments it calls &lt;a href="#checkForUpdates">checkForUpdates&lt;/a>, which will in turn call this method with a list
<span class='line'>434</span>    * of tables that need to be synchronized. Synchronize then asynchronously retrieves the update data from the server,
<span class='line'>435</span>    * which will be inserted into the local database via importData&lt;/p>
<span class='line'>436</span>    *
<span class='line'>437</span>    * &lt;p>Tables can be updated in one of two ways:&lt;/p>
<span class='line'>438</span>    *  &lt;ol>
<span class='line'>439</span>    *    &lt;li>Single Update: no matter what the current version of the table is it will be updated to the absolute latest version.&lt;/li>
<span class='line'>440</span>    *    &lt;li>Incremental Update: the table will be updated to the next most recent version then the next most recent, and so on until it is at the latest version.&lt;/li>
<span class='line'>441</span>    *  &lt;/ol>
<span class='line'>442</span>    *
<span class='line'>443</span>    * &lt;p>If you want a table to be updated in a single request then setup your versions file with a "version" : latest_version_number attribute for the table. Then define the latest table version in a single file named [table_name].json.php (the suffix is configurable).&lt;/p>
<span class='line'>444</span>    * &lt;p>If you want the table to be updated incrementally remove the "version" key from the tables entry in the versions file and replace it with a "versions" : array_of_all_versions attribute for the table. Then define a table definition file for each version. The files must be named: [table_name]_[version_number].json.php (the suffix is configurable).&lt;/p>
<span class='line'>445</span>    *
<span class='line'>446</span>    * &lt;p>Once all tables have been updated the synced or syncFailed event will be fired.&lt;/p>
<span class='line'>447</span>    *
<span class='line'>448</span>    * &lt;p>&lt;strong>Important Note&lt;/strong>: This method should not be called before the 'ready' event has been fired. &lt;/p>
<span class='line'>449</span>    *
<span class='line'>450</span>    * @param {String|Object[]} [list] - A list of tables that need to be updated. If null then it will check the server's published versions file. A table can be either a String, or an object that contains the following key/value  pairs:
<span class='line'>451</span>    *    &lt;ul>
<span class='line'>452</span>    *      &lt;li> &lt;span class="type">{String}&lt;/span> &lt;span class="param">table&lt;/span> The name of the table to update in a single request&lt;/li>
<span class='line'>453</span>    *      &lt;li> &lt;span class="type">{Array}&lt;/span> &lt;span class="param">versions&lt;/span> An ordered list of all the versions between the table's current version + 1 and the most recent version. &lt;/li>
<span class='line'>454</span>    *    &lt;/ul>
<span class='line'>455</span>    */</span><span class="WHIT">
<span class='line'>456</span> </span><span class="WHIT">  </span><span class="NAME">sync</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">list</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>457</span> </span><span class="WHIT">      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">this.loaded</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>458</span> </span><span class="WHIT">          </span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">"Implen.inTouch.sync() cannot be called before Impel.inTouch is finished initializing. Wait for the 'ready' event."</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>459</span> </span><span class="WHIT">      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">list</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>460</span> </span><span class="WHIT">        </span><span class="NAME">this.checkForUpdates</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>461</span> </span><span class="WHIT">      </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>462</span> </span><span class="WHIT">          </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">list.length</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>463</span> </span><span class="WHIT">            </span><span class="NAME">this.synced</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>464</span> </span><span class="WHIT">            </span><span class="KEYW">return</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>465</span> </span><span class="WHIT">          </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>466</span> 
<span class='line'>467</span> </span><span class="WHIT">        </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">failed</span><span class="WHIT">      </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>468</span> </span><span class="WHIT">        </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">waitingFor</span><span class="WHIT">  </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>469</span> </span><span class="WHIT">        </span><span class="NAME">$each</span><span class="PUNC">(</span><span class="NAME">list</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>470</span> </span><span class="WHIT">          </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT">  </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">"string"</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>471</span> </span><span class="WHIT">            </span><span class="NAME">waitingFor.push</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>472</span> </span><span class="WHIT">          </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>473</span> </span><span class="WHIT">            </span><span class="NAME">table.versions</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">table.table</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">$each</span><span class="PUNC">(</span><span class="NAME">table.versions</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">v</span><span class="PUNC">,</span><span class="NAME">k</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>474</span> </span><span class="WHIT">              </span><span class="NAME">waitingFor.push</span><span class="PUNC">(</span><span class="NAME">table.table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>475</span> </span><span class="WHIT">            </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>476</span> </span><span class="WHIT">          </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>477</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>478</span> </span><span class="WHIT">        
<span class='line'>479</span>         </span><span class="NAME">this.addEvent</span><span class="PUNC">(</span><span class="STRN">'updateFailed'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>480</span> </span><span class="WHIT">            </span><span class="NAME">waitingFor.splice</span><span class="PUNC">(</span><span class="NAME">waitingFor.indexOf</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>481</span> </span><span class="WHIT">            </span><span class="NAME">failed.push</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>482</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">waitingFor.length</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>483</span> </span><span class="WHIT">              </span><span class="NAME">this.syncFailed</span><span class="PUNC">(</span><span class="NAME">failed</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>484</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>485</span> </span><span class="WHIT">        </span><span class="NAME">this.addEvent</span><span class="PUNC">(</span><span class="STRN">'updated'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>486</span> </span><span class="WHIT">            </span><span class="NAME">waitingFor.splice</span><span class="PUNC">(</span><span class="NAME">waitingFor.indexOf</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>487</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">waitingFor.length</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>488</span> </span><span class="WHIT">              </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">failed.length</span><span class="WHIT"> </span><span class="PUNC">></span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>489</span> </span><span class="WHIT">                  </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.syncFailed</span><span class="PUNC">(</span><span class="NAME">failed</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>490</span> </span><span class="WHIT">              </span><span class="KEYW">else</span><span class="WHIT"> 
<span class='line'>491</span>                   </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.synced</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>492</span> </span><span class="WHIT">            </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>493</span> </span><span class="WHIT">            </span><span class="NAME">syncNext</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>494</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>495</span> </span><span class="WHIT">        
<span class='line'>496</span>         </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">syncQ</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">that</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">syncNext</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">syncQ_nowUpdating</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>497</span> </span><span class="WHIT">        
<span class='line'>498</span>         </span><span class="NAME">that</span><span class="WHIT">  </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>499</span> </span><span class="WHIT">        </span><span class="NAME">syncQ</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>500</span> </span><span class="WHIT">        
<span class='line'>501</span>         </span><span class="NAME">this.addEvent</span><span class="PUNC">(</span><span class="STRN">'updating'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">syncQ_nowUpdating</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>502</span> </span><span class="WHIT">        </span><span class="COMM">/**
<span class='line'>503</span>          * Synchronize the next version of a table
<span class='line'>504</span>          * @param {string} [last_table] - The last table to be updated
<span class='line'>505</span>          * @private 
<span class='line'>506</span>          */</span><span class="WHIT">
<span class='line'>507</span> </span><span class="WHIT">        </span><span class="NAME">syncNext</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">last_table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>508</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">last_table</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">last_table</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="NAME">syncQ_nowUpdating</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>509</span> </span><span class="WHIT">              </span><span class="KEYW">return</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>510</span> </span><span class="WHIT">            </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">nxt</span><span class="WHIT">   </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">syncQ.shift</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>511</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="PUNC">!</span><span class="NAME">nxt</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>512</span> </span><span class="WHIT">              </span><span class="KEYW">return</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>513</span> </span><span class="WHIT">            </span><span class="NAME">that.updating</span><span class="PUNC">(</span><span class="NAME">nxt.table</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>514</span> </span><span class="WHIT">            
<span class='line'>515</span>             </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">url</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">that.options.baseURL</span><span class="PUNC">+</span><span class="NAME">nxt.table</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>516</span> </span><span class="WHIT">            </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">nxt.version</span><span class="PUNC">)</span><span class="WHIT"> 
<span class='line'>517</span>               </span><span class="NAME">url</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"_"</span><span class="PUNC">+</span><span class="NAME">nxt.version</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>518</span> </span><span class="WHIT">            </span><span class="NAME">url</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">that.options.tableFileSuffix</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>519</span> </span><span class="WHIT">            
<span class='line'>520</span>             </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Impel.JsonP</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">,</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">callback</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">that.importData</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">request</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>521</span> </span><span class="WHIT">        </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>522</span> </span><span class="WHIT">        
<span class='line'>523</span>         </span><span class="COMM">/**
<span class='line'>524</span>          * Slower devices like the iPhone/iPod Touch will crash if a lot of tables are retrieved and created at once, so
<span class='line'>525</span>          * instead of downloading and importing all at once (asynchronously), we'll add them to a queue and grab them
<span class='line'>526</span>          * one at a time (synchronously)
<span class='line'>527</span>          */</span><span class="WHIT">
<span class='line'>528</span> </span><span class="WHIT">        </span><span class="NAME">list.each</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>529</span> </span><span class="WHIT">              </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'string'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>530</span> </span><span class="WHIT">                </span><span class="COMM">// if table is a string then there is only one version to update, so we don't care about race conditions</span><span class="WHIT">
<span class='line'>531</span> </span><span class="WHIT">                </span><span class="NAME">syncQ.push</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>532</span> </span><span class="WHIT">              </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'object'</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">$type</span><span class="PUNC">(</span><span class="NAME">table</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'array'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>533</span> </span><span class="WHIT">                  </span><span class="COMM">//if table is an object then there is potentially more than one version of the table that we need to go through,</span><span class="WHIT">
<span class='line'>534</span> </span><span class="WHIT">                  </span><span class="COMM">//so we want to do them one at a time</span><span class="WHIT">
<span class='line'>535</span> </span><span class="WHIT">                  </span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">length</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>536</span> </span><span class="WHIT">                    </span><span class="NAME">syncQ.push</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">table</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">version</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">table</span><span class="PUNC">[</span><span class="STRN">'versions'</span><span class="PUNC">]</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>537</span> </span><span class="WHIT">                  </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>538</span> </span><span class="WHIT">              </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>539</span> </span><span class="WHIT">              
<span class='line'>540</span>         </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>541</span> </span><span class="WHIT">        </span><span class="NAME">syncNext</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>542</span> </span><span class="WHIT">    </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>543</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>544</span> </span><span class="WHIT">  </span><span class="COMM">/**
<span class='line'>545</span>    * Import a new version of a table into the local database.
<span class='line'>546</span>    * &lt;p>If any portion of the import fails the entire transaction is rolled back.&lt;/p>
<span class='line'>547</span>    *
<span class='line'>548</span>    * @param {Object} data - An Object containing the following keys:
<span class='line'>549</span>    * &lt;li>&lt;span class="type">{String}&lt;/span> &lt;span class="param">table&lt;/span> The name of the table&lt;/li>
<span class='line'>550</span>    * &lt;li>&lt;span class="type">{Int}&lt;/span> &lt;span class="param">version&lt;/span> The version of table and its data&lt;/li>
<span class='line'>551</span>    * &lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">pre-create&lt;/span>] An array of SQL statements to execute before going on to the create string&lt;/li>
<span class='line'>552</span>    * &lt;li>&lt;span class="type">{String}&lt;/span> [&lt;span class="param">create&lt;/span>] An SQL statement used to create the table&lt;/li>
<span class='line'>553</span>    * &lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">extra&lt;/span>] An array of SQL statements used to modify the table after it has been created, but before data has been loaded&lt;/li>
<span class='line'>554</span>    * &lt;li>&lt;span class="type">{String[]}&lt;/span> [&lt;span class="param">data&lt;/span>] Array of INSERT, UPDATE, or DELETE statements used to fill the table&lt;/li>
<span class='line'>555</span>    */</span><span class="WHIT">
<span class='line'>556</span> </span><span class="WHIT">  </span><span class="NAME">importData</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>557</span> </span><span class="WHIT">      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>558</span> </span><span class="WHIT">        </span><span class="KEYW">return</span><span class="WHIT">
<span class='line'>559</span> </span><span class="WHIT">      
<span class='line'>560</span>       </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getVersion</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>561</span> </span><span class="WHIT">          </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>562</span> </span><span class="WHIT">      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="WHIT"> </span><span class="PUNC">>=</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>563</span> </span><span class="WHIT">        </span><span class="NAME">this.updated</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="NAME">atVersion</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>564</span> </span><span class="WHIT">        </span><span class="KEYW">return</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>565</span> </span><span class="WHIT">      </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>566</span> </span><span class="WHIT">      
<span class='line'>567</span>       
<span class='line'>568</span>       </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">formatSQLError</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="STRN">"SQL Error: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">e.message</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"("</span><span class="PUNC">+</span><span class="NAME">e.code</span><span class="PUNC">+</span><span class="STRN">")"</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>569</span> </span><span class="WHIT">      </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">stmt</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">''</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>570</span> </span><span class="WHIT">      
<span class='line'>571</span>       </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'create'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'data'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>572</span> </span><span class="WHIT">          </span><span class="NAME">this.db.transaction</span><span class="PUNC">(</span><span class="WHIT">
<span class='line'>573</span> </span><span class="WHIT">               </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">transaction</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>574</span> </span><span class="WHIT">                     </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'pre-create'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'pre-create'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">$family.name</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'array'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>575</span> </span><span class="WHIT">                        </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'pre-create'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">each</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>576</span> </span><span class="WHIT">                          </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Statement failed: "</span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">stmt</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">formatSQLError</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>577</span> </span><span class="WHIT">                        </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>578</span> </span><span class="WHIT">                     </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>579</span> </span><span class="WHIT">                     </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'create'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>580</span> </span><span class="WHIT">                       </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'create'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>581</span>                                                 </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.created</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>582</span> </span><span class="WHIT">                                                </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> 
<span class='line'>583</span>                                                     </span><span class="NAME">this.createFailed</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="NAME">formatSQLError</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> 
<span class='line'>584</span>                                                     </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Statement failed: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'create'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">formatSQLError</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>585</span> </span><span class="WHIT">                                                    </span><span class="COMM">// return true to cancel and rollback the entire transaction</span><span class="WHIT">
<span class='line'>586</span> </span><span class="WHIT">                                                    </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>587</span> </span><span class="WHIT">                                                </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>588</span> </span><span class="WHIT">                                            </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>589</span> </span><span class="WHIT">                     </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>590</span> </span><span class="WHIT">                     </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'extra'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'extra'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">$family.name</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'array'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>591</span> </span><span class="WHIT">                        </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'extra'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">each</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>592</span> </span><span class="WHIT">                          </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Statement failed: "</span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">stmt</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">formatSQLError</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>593</span> </span><span class="WHIT">                        </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>594</span> </span><span class="WHIT">                     </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>595</span> </span><span class="WHIT">                   
<span class='line'>596</span>                      </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'data'</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'data'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">$family.name</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'array'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>597</span> </span><span class="WHIT">                           </span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'data'</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">length</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>598</span> </span><span class="WHIT">                               </span><span class="NAME">stmt</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'data'</span><span class="PUNC">]</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>599</span> </span><span class="WHIT">                               </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">'string'</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>600</span> </span><span class="WHIT">                                 </span><span class="NAME">transaction.executeSql</span><span class="PUNC">(</span><span class="NAME">stmt</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>601</span>                                        </span><span class="KEYW">null</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>602</span>                                        </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">t</span><span class="PUNC">,</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Failed to load data: "</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">stmt</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">formatSQLError</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>603</span> </span><span class="WHIT">                                  </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>604</span> </span><span class="WHIT">                               </span><span class="PUNC">}</span><span class="WHIT">                     
<span class='line'>605</span>                            </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>606</span> </span><span class="WHIT">                     </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>607</span> </span><span class="WHIT">               </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>608</span>                </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.updateFailed</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT"> 
<span class='line'>609</span>                </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> 
<span class='line'>610</span>                   </span><span class="NAME">this.setVersion</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> 
<span class='line'>611</span>                   </span><span class="NAME">this.updated</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'table'</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">atVersion</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">data</span><span class="PUNC">[</span><span class="STRN">'version'</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>612</span> </span><span class="WHIT">                </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>613</span> </span><span class="WHIT">           </span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>614</span> </span><span class="WHIT">      </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>615</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>616</span> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>617</span> 
<span class='line'>618</span> 
<span class='line'>619</span> </span><span class="COMM">/**
<span class='line'>620</span>  * Add in our own JsonP class because the standard clientcide version does not inform us of failures and does not support 
<span class='line'>621</span>  * a predefined name for the callback function.
<span class='line'>622</span>  */</span><span class="WHIT">
<span class='line'>623</span> </span><span class="NAME">Impel.JsonP</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Class</span><span class="PUNC">(</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>624</span> </span><span class="WHIT">	</span><span class="NAME">Implements</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">Options</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">Events</span><span class="PUNC">]</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>625</span> </span><span class="WHIT">	</span><span class="NAME">options</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>626</span> </span><span class="COMM">//	onComplete: $empty,</span><span class="WHIT">
<span class='line'>627</span> </span><span class="COMM">//  onFailure: $empty,</span><span class="WHIT">
<span class='line'>628</span> </span><span class="COMM">//	globalFunction: '',</span><span class="WHIT">
<span class='line'>629</span> </span><span class="COMM">//	abortAfter: 0,</span><span class="WHIT">
<span class='line'>630</span> </span><span class="WHIT">    </span><span class="NAME">callBackKey</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">"callback"</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>631</span> </span><span class="WHIT">    </span><span class="NAME">queryString</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>632</span> </span><span class="WHIT">    </span><span class="NAME">data</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>633</span> </span><span class="WHIT">    </span><span class="NAME">timeout</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NUMB">5000</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>634</span> </span><span class="WHIT">    </span><span class="NAME">callback</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>635</span> </span><span class="WHIT">      </span><span class="KEYW">throw</span><span class="PUNC">(</span><span class="STRN">"Error: Impel.JsonP objects must have a callback function defined as part of their instantiation options."</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>636</span> </span><span class="WHIT">    </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>637</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>638</span> </span><span class="WHIT">  </span><span class="NAME">script</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>639</span> </span><span class="WHIT">  </span><span class="NAME">initialize</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">options</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>640</span> </span><span class="WHIT">    </span><span class="NAME">this.setOptions</span><span class="PUNC">(</span><span class="NAME">options</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>641</span> </span><span class="WHIT">    </span><span class="NAME">this.url</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.makeUrl</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>642</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>643</span> </span><span class="WHIT">  </span><span class="NAME">isComplete</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>644</span> </span><span class="WHIT">    </span><span class="KEYW">try</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">this.script.dispose</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="PUNC">}</span><span class="KEYW">catch</span><span class="PUNC">(</span><span class="NAME">e</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>645</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>646</span> </span><span class="WHIT">  </span><span class="NAME">request</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>647</span> </span><span class="WHIT">    </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">idx</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">Math.floor</span><span class="PUNC">(</span><span class="NAME">Math.random</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">*</span><span class="NUMB">101</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>648</span> </span><span class="WHIT">    </span><span class="NAME">url</span><span class="WHIT">     </span><span class="PUNC">=</span><span class="WHIT">  </span><span class="NAME">this.makeUrl</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>649</span> </span><span class="WHIT">    
<span class='line'>650</span>     </span><span class="NAME">my</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>651</span> </span><span class="WHIT">    </span><span class="NAME">Impel.JsonP.callback</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>652</span> </span><span class="WHIT">      </span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">my.options.callback</span><span class="PUNC">(</span><span class="NAME">data</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">delay</span><span class="PUNC">(</span><span class="NUMB">50</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>653</span> </span><span class="WHIT">      </span><span class="NAME">my.isComplete</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>654</span> </span><span class="WHIT">    </span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>655</span> </span><span class="WHIT">    
<span class='line'>656</span>     </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">dl</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">Browser.Engine.trident</span><span class="PUNC">)</span><span class="PUNC">?</span><span class="NUMB">50</span><span class="PUNC">:</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="COMM">//for some reason, IE needs a moment here...</span><span class="WHIT">
<span class='line'>657</span> </span><span class="WHIT">    </span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>658</span> </span><span class="WHIT">      </span><span class="NAME">this.script</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">Element</span><span class="PUNC">(</span><span class="STRN">'script'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT"> </span><span class="NAME">src</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">url</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">type</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">'text/javascript'</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">id</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="STRN">'jsonp_'</span><span class="PUNC">+</span><span class="NAME">idx</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>659</span> </span><span class="WHIT">      </span><span class="NAME">this.script.inject</span><span class="PUNC">(</span><span class="NAME">document.head</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>660</span> </span><span class="WHIT">      
<span class='line'>661</span>         </span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>662</span> </span><span class="WHIT">          </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">this.script.getParent</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>663</span> </span><span class="WHIT">            </span><span class="NAME">this.fireEvent</span><span class="PUNC">(</span><span class="STRN">'onFailure'</span><span class="PUNC">)</span><span class="WHIT">
<span class='line'>664</span> </span><span class="WHIT">            </span><span class="NAME">this.script.dispose</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>665</span> </span><span class="WHIT">          </span><span class="PUNC">}</span><span class="WHIT"> 
<span class='line'>666</span>         </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">delay</span><span class="PUNC">(</span><span class="NAME">this.options.timeout</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>667</span> </span><span class="WHIT">        
<span class='line'>668</span>     </span><span class="PUNC">}</span><span class="PUNC">.</span><span class="NAME">bind</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">delay</span><span class="PUNC">(</span><span class="NAME">dl</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>669</span> </span><span class="WHIT">    
<span class='line'>670</span>     </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT"> 
<span class='line'>671</span>   </span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='line'>672</span> </span><span class="WHIT">  </span><span class="NAME">makeUrl</span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>673</span> </span><span class="WHIT">    </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">jurl</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>674</span> </span><span class="WHIT">    </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">url</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>675</span> </span><span class="WHIT">      </span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">separator</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">url.test</span><span class="PUNC">(</span><span class="STRN">'\\?'</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">?</span><span class="STRN">'&'</span><span class="PUNC">:</span><span class="STRN">'?'</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>676</span> </span><span class="WHIT">      </span><span class="NAME">jurl</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">url</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">separator</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">this.options.callBackKey</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"=Impel.JsonP.callback"</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>677</span> </span><span class="WHIT">        </span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">this.options.queryString</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="NAME">jurl</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"&"</span><span class="PUNC">+</span><span class="NAME">this.options.queryString</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>678</span> </span><span class="WHIT">      </span><span class="NAME">jurl</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"&"</span><span class="PUNC">+</span><span class="NAME">Hash.toQueryString</span><span class="PUNC">(</span><span class="NAME">this.options.data</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>679</span> </span><span class="WHIT">    </span><span class="PUNC">}</span><span class="WHIT"> </span><span class="KEYW">else</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='line'>680</span> </span><span class="WHIT">      </span><span class="NAME">jurl</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.url</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>681</span> </span><span class="WHIT">    </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>682</span> </span><span class="WHIT">    </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jurl</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>683</span> </span><span class="WHIT">  </span><span class="PUNC">}</span><span class="WHIT">
<span class='line'>684</span> </span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='line'>685</span> </span></pre></body></html>